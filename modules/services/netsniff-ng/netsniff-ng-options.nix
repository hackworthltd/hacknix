{ name, config, lib, pkgs, outputDirPerms }:

with lib;
rec {
  options = {

    name = mkOption {
      type = pkgs.lib.types.nonEmptyStr;
      default = "${name}";
      description = ''
        A short name for the netsniff-ng instance. The name should be
        a valid <literal>systemd</literal> service name (i.e., no
        spaces, no special characters, etc.); the service that runs
        the instance will be named
        <literal>netsniff-ng-<em>name</em>.service</literal>.

        If undefined, the name of the attribute set will be used.
      '';
    };

    bindToCPU = mkOption {
      type = types.nullOr types.int;
      default = null;
      example = 0;
      description = ''
        Pin this <command>netsniff-ng<command> instance to the
        specified CPU, and also set the input interface's IRQ CPU
        affinity to this CPU.

        Though this option is not required, it is recommended that you
        set it to a CPU/core that can be dedicated to packet capture,
        if you want to ensure best performance.
      '';
    };

    inputInterface = mkOption {
      type = pkgs.lib.types.nonEmptyStr;
      example = "eno1";
      description = ''
        The name of the input network device, from which packets will
        be read.

        Note that the interface named here is assumed to be dedicated
        to packet capture, and not used for any other purpose! The
        service will do unusual things to the interface to optimize it
        for packet capture, such as disabling all hardware offloading
        features, disabling DHCP on the interface, and putting it into
        promiscuous mode.
      '';
    };

    interval = mkOption {
      type = types.str;
      default = "";
      example = "150MiB";
      description = ''
        An optional string that, if provided, specifies the interval
        at which the pcap output file is rotated.

        The string can specify a maximum file size in units of
        "KiB/MiB/GiB", or a time interval in units of "sec/min/hrs".
      '';
    };

    outputBaseDirectory = mkOption {
      type = types.path;
      default = "/var/log/pcap";
      description = ''
        The pcap files generated by this
        <command>netsniff-ng</command> instance will be written to an
        output directory whose path is created by appending the
        instance's <option>name</option> to the directory path
        specified by this option. For example, if this option's value
        is <literal>/var/log/pcap</literal>, and the instance's name
        is <literal>full-capture</literal>, then the instance's output
        directory is <literal>/var/log/pcap/full-capture</literal>.

        The output directory and its predecessors will be created, if
        necessary.

        The output directory's owner and group will be set to
        <option>user</option> and <option>group</option>,
        respectively.

        The output directory's permissions will be set to
        ${outputDirPerms}.

        It is probably a good idea to ensure that no other processes
        write to or otherwise try to modify the output directory,
        except perhaps to remove/trim rotated pcap files.
      '';
    };

    packetType = mkOption {
      type = types.nullOr (types.enum [ "host" "outgoing" "broadcast" "multicast" "others" ]);
      default = null;
      description = ''
        If specified, only packets addressed to this class will be
        captured. (<literal>outgoing</literal> refers to packets sent
        from this host via the input interface.)
      '';
    };

    pcapMagic = mkOption {
      type = types.str;
      default = "";
      example = "0xa1b2cd34";
      description = ''
        A hex string pcap "magic string" type to be used for pcap
        storage. See
        <citerefentry><refentrytitle>netsniff-ng</refentrytitle><manvolnum>8</manvolnum></citerefentry>
        for some common values.
      '';
    };

    pcapPrefix = mkOption {
      type = types.str;
      default = "${name}-";
      example = "pcap-";
      description = ''
        A string that specifies the prefix used to name rotated pcap
        dump files. This option's default value is the instance's
        <option><em>name</em></option>, plus a trailing "-".

        If this option is set to <literal>""</literal>,
        then <command>netsniff-ng</command> uses a built-in default
        prefix.
      '';
    };

    ringSize = mkOption {
      type = types.str;
      default = "";
      example = "64MiB";
      description = ''
        An optional string that, if provided, specifies the Linux
        kernel's <literal>RX_RING</literal>/<literal>TX_RING</literal>
        interface size. The size must be specified in units of
        "KiB/MiB/GiB".

        If this option is not provided, then
        <command>netsniff-ng</command> chooses a default size based on
        the network connectivity rate.
      '';
    };

    serviceRequires = mkOption {
      type = types.listOf pkgs.lib.types.nonEmptyStr;
      default = [];
      example = [ "pcap.mount" ];
      description = ''
        An optional list of <literal>systemd</literal> units required
        by this <literal>netsniff-ng</literal> instance. It could be,
        for example, an encrypted filesystem where the pcap dumps are
        stored.

        The units in this list are added to the instance unit's
        <literal>after</literal> and <literal>require</literal>
        dependencies.
      '';
    };

    extraOptions = mkOption {
      type = types.str;
      default = "";
      example = "--rfraw --notouch-irq";
      description = ''
        An optional string that, if provided, specifies additional
        options to pass to <command>netsniff-ng</command>. These
        options are specified at the end of the command line and, if
        they overlap with any options specified in the service
        configuration, will override those options (including default
        values).
      '';
    };

    trim = {

      schedule = mkOption {
        default = [];
        example = [
          { size = 100000;
            afterDays = 7; }
          { size = 8192;
            afterDays = 14; }
        ];
        description = ''
          If this list contains one or more attribute sets, the pcap
          files generated by this <literal>netsniff-ng</literal>
          instance will be trimmed on this schedule. For each pcap
          file that is older than <option>afterDays</option> days, the
          flows in that file are trimmed to <option>size</option>
          bytes, using the <command>trimpcap</command> command.
        '';
      };

      deleteAfterDays = mkOption {
        type = types.nullOr types.int;
        default = null;
        example = 14;
        description = ''
          If <option>deleteAfterDays</option> is defined, pcap files
          generated by this <literal>netsniff-ng</literal> instance
          will be deleted after they are this many days old.
        '';
      };

      period = mkOption {
        type = types.str;
        default = "hourly";
        example = "1day";
        description = ''
          Specifies how often the trim script runs.

          The period format is described in
          <citerefentry><refentrytitle>systemd.time</refentrytitle>
          <manvolnum>7</manvolnum></citerefentry>.
        '';
      };

    };

  };

}
